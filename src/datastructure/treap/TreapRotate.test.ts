import Treap from './TreapRotate'

test('test rotate tereap ', () => {
  const tp = new Treap()
  expect(tp.size).toBe(0)
  tp.insert(3)
  tp.insert(2)
  tp.insert(10)
  tp.insert(-1)
  tp.insert(100)
  tp.insert(101)
  tp.insert(1)
  expect([...tp]).toStrictEqual([-1, 1, 2, 3, 10, 100, 101])
  expect(tp.size).toBe(7)
  tp.insert(-100)
  expect(tp.size).toBe(8)

  tp.delete(200)
  expect(tp.size).toBe(8)
  tp.delete(100)
  expect(tp.size).toBe(7)
  tp.delete(1)
  tp.delete(-1)
  tp.delete(-1)
  tp.delete(101)
  expect([...tp]).toStrictEqual([-100, 2, 3, 10])
})

test('test treap methods', () => {
  const tp = new Treap()
  expect(tp.isEmpty()).toBe(true)
  expect(tp.extract()).toBe(null)
  expect(tp.peek()).toBe(null)
  tp.insert(1)
  expect(tp.peek()).toBe(1)
  tp.extract()
  expect(tp.isEmpty()).toBe(true)
})

test('test treap search', () => {
  const tp = new Treap()
  tp.insert(3)
  tp.insert(2)
  tp.insert(1)
  tp.insert(-1)
  expect(tp.find(3)).toBe(3)
  expect(tp.find(2)).toBe(2)
  expect(tp.find(1)).toBe(1)
  expect(tp.find(-1)).toBe(-1)
  expect(tp.find(4)).toBe(null)
})
